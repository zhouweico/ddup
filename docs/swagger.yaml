basePath: /api/v1
definitions:
  dto.ChangePasswordRequest:
    properties:
      newPassword:
        minLength: 6
        type: string
      oldPassword:
        minLength: 6
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      createdAt:
        type: string
      expiredAt:
        type: string
      expiresIn:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.RegisterRequest:
    properties:
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.UpdateUserRequest:
    properties:
      avatar:
        type: string
      bio:
        type: string
      email:
        type: string
      gender:
        type: string
      location:
        type: string
      mobile:
        type: string
      nickname:
        type: string
    type: object
  dto.UserResponse:
    properties:
      avatar:
        type: string
      bio:
        type: string
      birthday:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: integer
      lastLogin:
        type: string
      location:
        type: string
      mobile:
        type: string
      nickname:
        type: string
      username:
        type: string
    type: object
  handler.Response:
    properties:
      code:
        description: 响应码
        type: integer
      data:
        description: 响应数据
      message:
        description: 响应信息
        type: string
    type: object
  handler.SocialRequest:
    properties:
      description:
        description: 描述
        type: string
      platform:
        description: 平台名称
        type: string
      url:
        description: 个人主页链接
        type: string
      username:
        description: 平台用户名
        type: string
    required:
    - platform
    - username
    type: object
  handler.SocialResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      platform:
        type: string
      url:
        type: string
      username:
        type: string
      verified:
        type: boolean
    type: object
info:
  contact: {}
  description: DDUP 服务 API 文档
  title: DDUP API
  version: "1.0"
paths:
  /health:
    get:
      description: 检查服务和数据库连接状态
      produces:
      - application/json
      responses:
        "200":
          description: 服务正常
          schema:
            $ref: '#/definitions/handler.Response'
        "503":
          description: 服务异常
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 健康检查
      tags:
      - 系统
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "400":
          description: 无效的请求参数
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 用户登录
  /logout:
    post:
      description: 用户退出登录
      produces:
      - application/json
      responses:
        "200":
          description: 退出成功
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 退出登录
  /register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: 无效的请求参数
          schema:
            $ref: '#/definitions/handler.Response'
      summary: 用户注册
  /social-:
    get:
      description: 获取当前用户的所有社交媒体账号
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.SocialResponse'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取社交媒体账号列表
    post:
      consumes:
      - application/json
      description: 为当前用户创建社交媒体账号
      parameters:
      - description: 社交媒体账号信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SocialRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 创建社交媒体账号
  /social-/{id}:
    delete:
      description: 删除指定的社交媒体账号
      parameters:
      - description: 社交媒体账号ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 删除社交媒体账号
    put:
      consumes:
      - application/json
      description: 更新指定的社交媒体账号
      parameters:
      - description: 社交媒体账号ID
        in: path
        name: id
        required: true
        type: string
      - description: 社交媒体账号信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SocialRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 更新社交媒体账号
  /user:
    delete:
      description: 删除用户账号
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 删除用户
    get:
      description: 获取当前登录用户信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 获取用户信息
    put:
      consumes:
      - application/json
      description: 更新用户基本信息
      parameters:
      - description: 用户信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: 无效的请求参数
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 更新用户信息
  /user/password:
    put:
      consumes:
      - application/json
      description: 修改用户密码
      parameters:
      - description: 密码信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: 无效的请求参数
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - Bearer: []
      summary: 修改密码
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
